{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["data","across","a","clue","answer","row","col","c","e","f","g","h","i","k","l","down","b","d","j","Page","styled","div","Header","h1","Commands","Command","button","CrosswordWrapper","App","crossword","useRef","focus","useCallback","event","current","fillAllAnswers","reset","useState","setMessages","addMessage","message","m","concat","onCorrect","direction","number","onLoadedCorrect","answers","map","join","onCrosswordCorrect","isCorrect","JSON","stringify","onCellChange","char","onClick","ref","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6509483b.chunk.js","sourcesContent":["import './App.css';\nimport React, { useCallback, useRef, useState } from 'react';\nimport Crossword from '@jaredreisinger/react-crossword';\nimport styled from 'styled-components';\n\nconst data = {\n  across: {\n    a: {\n      clue: 'The second-least answer',\n      answer: '17',\n      row: 0,\n      col: 0,\n    },\n    c: {\n      clue: 'Two consecutive digits',\n      answer: '45',\n      row: 0,\n      col: 3,\n    },\n    e: {\n      clue: 'Average of c-across and h-across',\n      answer: '35',\n      row: 1,\n      col: 0,\n    },\n    f: {\n      clue: '30 times the number of occurrences of its second digit in this puzzle',\n      answer: '30',\n      row: 1,\n      col: 3,\n    },\n    g: {\n      clue: 'The square of a-down',\n      answer: '169',\n      row: 2,\n      col: 1,\n    },\n    h: {\n      clue: 'Less than f-across',\n      answer: '25',\n      row: 3,\n      col: 0,\n    },\n    i: {\n      clue: 'Sum of all cells containing a 9',\n      answer: '27',\n      row: 3,\n      col: 3,\n    },\n    k: {\n      clue: 'Has decreasing digits',\n      answer: '98',\n      row: 4,\n      col: 0,\n    },\n    l: {\n      clue: 'Sum of the digits of c-down',\n      answer: '19',\n      row: 4,\n      col: 3,\n    },\n  },\n  down: {\n    a: {\n      clue: 'The square root of g-across',\n      answer: '13',\n      row: 0,\n      col: 0,\n    },\n    b: {\n      clue: 'One away from a palindrome; not a multiple of 5',\n      answer: '75158',\n      row: 0,\n      col: 1,\n    },\n    c: {\n      clue: 'Containing no repeated digit',\n      answer: '43921',\n      row: 0,\n      col: 3,\n    },\n    d: {\n      clue: 'Twice h-across',\n      answer: '50',\n      row: 0,\n      col: 4,\n    },\n    h: {\n      clue: 'More than i-across by the amount i-across is more than h-across',\n      answer: '29',\n      row: 3,\n      col: 0,\n    },\n    j: {\n      clue: 'Less than the largest 2-digit answer by l-across',\n      answer: '79',\n      row: 3,\n      col: 4,\n    },\n  },\n};\n\nconst Page = styled.div`\n  padding: 2em;\n`;\n\nconst Header = styled.h1`\n  margin-bottom: 1em;\n`;\n\nconst Commands = styled.div``;\n\nconst Command = styled.button`\n  margin-right: 1em;\n`;\n\nconst CrosswordWrapper = styled.div`\n  margin-top: 2em;\n  max-width: 90%;\n\n  /* and some fun making use of the defined class names */\n  .crossword.correct {\n    rect {\n      stroke: rgb(100, 200, 100) !important;\n    }\n    svg > rect {\n      fill: rgb(100, 200, 100) !important;\n    }\n    text {\n      fill: rgb(100, 200, 100) !important;\n    }\n  }\n\n  .grid {\n    min-width: 250px;\n    max-width: 350px;\n    float: left;\n  } \n\n  .clues {\n    min-width: 250px;\n    max-width: 350px;\n    width: auto;\n    flex: 2 1 50%;\n    float: left;\n    clear: left;\n  }\n\n  .clue.correct {\n    ::before {\n      content: '\\u2713'; /* a.k.a. checkmark: âœ“ */\n      display: inline-block;\n      text-decoration: none;\n      color: rgb(100, 200, 100);\n      margin-right: 0.25em;\n    }\n\n    text-decoration: line-through;\n    color: rgb(130, 130, 130);\n  }\n`;\n\n\n\n// in order to make this a more-comprehensive example, and to vet Crossword's\n// features, we actually implement a fair amount...\n\nfunction App() {\n  const crossword = useRef();\n\n  const focus = useCallback((event) => {\n    crossword.current.focus();\n  }, []);\n\n  const fillAllAnswers = useCallback((event) => {\n    crossword.current.fillAllAnswers();\n  }, []);\n\n  const reset = useCallback((event) => {\n    crossword.current.reset();\n  }, []);\n\n  // We don't really *do* anything with callbacks from the Crossword component,\n  // but we can at least show that they are happening.  You would want to do\n  // something more interesting than simply collecting them as messages.\n  const [messages, setMessages] = useState([]);\n\n  const addMessage = useCallback((message) => {\n    setMessages((m) => m.concat(`${message}\\n`));\n  }, []);\n\n  // onCorrect is called with the direction, number, and the correct answer.\n  const onCorrect = useCallback(\n    (direction, number, answer) => {\n      addMessage(`onCorrect: \"${direction}\", \"${number}\", \"${answer}\"`);\n    },\n    [addMessage]\n  );\n\n  // onLoadedCorrect is called with an array of the already-correct answers,\n  // each element itself is an array with the same values as in onCorrect: the\n  // direction, number, and the correct answer.\n  const onLoadedCorrect = useCallback(\n    (answers) => {\n      addMessage(\n        `onLoadedCorrect:\\n${answers\n          .map(\n            ([direction, number, answer]) =>\n              `    - \"${direction}\", \"${number}\", \"${answer}\"`\n          )\n          .join('\\n')}`\n      );\n    },\n    [addMessage]\n  );\n\n  // onCrosswordCorrect is called with a truthy/falsy value.\n  const onCrosswordCorrect = useCallback(\n    (isCorrect) => {\n      addMessage(`onCrosswordCorrect: ${JSON.stringify(isCorrect)}`);\n    },\n    [addMessage]\n  );\n\n  // onCellChange is called with the row, column, and character.\n  const onCellChange = useCallback(\n    (row, col, char) => {\n      addMessage(`onCellChange: \"${row}\", \"${col}\", \"${char}\"`);\n    },\n    [addMessage]\n  );\n\n  return (\n    <Page>\n      <Header>CrossNumber Demo</Header>\n\n      <p>\n        We present a new sort of number puzzle.  Full of self reference, arithmetic, and nothing else.\n      </p>\n\n      <p>\n        <b>Instructions</b>: Each cell contains a single digit 0-9.  No two answers are identical.\n      </p>\n\n      <Commands>\n        <Command onClick={focus}>Focus</Command>\n        <Command onClick={fillAllAnswers}>Fill all answers</Command>\n        <Command onClick={reset}>Reset</Command>\n      </Commands>\n\n      <CrosswordWrapper>\n        <Crossword\n          data={data}\n          ref={crossword}\n          onCorrect={onCorrect}\n          onLoadedCorrect={onLoadedCorrect}\n          onCrosswordCorrect={onCrosswordCorrect}\n          onCellChange={onCellChange}\n        />\n      </CrosswordWrapper>\n\n      {/* <Messages>{messages}</Messages> */}\n\n      <p>\n        Created with <a href=\"https://jaredreisinger.github.io/react-crossword/\">@jaredreisinger/react-crossword</a>.\n      </p>\n    </Page>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n// export default function MyPage() {\n//   return <Crossword data={data} />;\n// }\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}